package ui

// Code generated by nausicaa. DO NOT EDIT.

import (
	"github.com/gowebapi/webapi"
	"github.com/gowebapi/webapi/dom"
	"github.com/gowebapi/webapi/html"
	"github.com/gowebapi/webapi/html/canvas"
	"github.com/gowebapi/webapi/html/media"
)

type (
	_ *webapi.Document // prevent unused import errors
	_ *dom.Element
	_ *html.HTMLDivElement
	_ *canvas.HTMLCanvasElement
	_ *media.HTMLAudioElement
)

var (
	_document = webapi.GetDocument()
)

// source: testdata/standalone/nested.html

type nested struct {
	roots []*dom.Element
}

func newNested() *nested {
	ul0 := _document.CreateElement("ul", nil)
	li0 := _document.CreateElement("li", nil)
	a0 := _document.CreateElement("a", nil)
	a0.SetAttribute("href", "/0")
	li0.AppendChild(&a0.Node)
	ul0.AppendChild(&li0.Node)
	li1 := _document.CreateElement("li", nil)
	a1 := _document.CreateElement("a", nil)
	a1.SetAttribute("href", "/1")
	li1.AppendChild(&a1.Node)
	ul0.AppendChild(&li1.Node)
	li2 := _document.CreateElement("li", nil)
	a2 := _document.CreateElement("a", nil)
	a2.SetAttribute("href", "/2")
	li2.AppendChild(&a2.Node)
	ul0.AppendChild(&li2.Node)
	return &nested{
		roots: []*dom.Element{ul0},
	}
}

func (v *nested) Roots() []*dom.Element {
	return v.roots
}
